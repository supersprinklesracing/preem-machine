name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    environment:
      name: ci
    env:
      AUTH_COOKIE_NAME: ${{ secrets.AUTH_COOKIE_NAME }}
      AUTH_COOKIE_SIGNATURE_KEY_CURRENT: ${{ secrets.AUTH_COOKIE_SIGNATURE_KEY_CURRENT }}
      AUTH_COOKIE_SIGNATURE_KEY_PREVIOUS: ${{ secrets.AUTH_COOKIE_SIGNATURE_KEY_PREVIOUS }}
      NEXT_PUBLIC_AUTH_DEBUG: ${{ secrets.NEXT_PUBLIC_AUTH_DEBUG }}
      NEXT_PUBLIC_DISABLE_HTTPS: ${{ secrets.NEXT_PUBLIC_DISABLE_HTTPS }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_STRIPE_API_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_API_KEY }}
      SERVICE_ACCOUNT_CLIENT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_CLIENT_EMAIL }}
      SERVICE_ACCOUNT_PRIVATE_KEY: ${{ secrets.SERVICE_ACCOUNT_PRIVATE_KEY }}
      STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
      STRIPE_API_VERSION: ${{ secrets.STRIPE_API_VERSION }}

      # The following environment variables are used to configure the Firebase emulators.
      # They are managed as secrets to keep all environment configurations in one place.
      # Expected value: "localhost:8080"
      FIRESTORE_EMULATOR_HOST: ${{ secrets.FIRESTORE_EMULATOR_HOST }}
      # Expected value: "localhost:9099"
      FIREBASE_AUTH_EMULATOR_HOST: ${{ secrets.FIREBASE_AUTH_EMULATOR_HOST }}
      # Expected value: "localhost:8080"
      NEXT_PUBLIC_FIRESTORE_EMULATOR_HOST: ${{ secrets.NEXT_PUBLIC_FIRESTORE_EMULATOR_HOST }}
      # Expected value: "localhost:9099"
      NEXT_PUBLIC_AUTH_EMULATOR_HOST: ${{ secrets.NEXT_PUBLIC_AUTH_EMULATOR_HOST }}
      # Expected value: "preem-machine-ci"
      GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT }}

    steps:
      - uses: actions/checkout@v5
        with:
          filter: tree:0
          fetch-depth: 0

      # Nx Cloud is disabled due to lack of quota.
      # To enable it, uncomment the following lines and add your NX_CLOUD_AUTH_TOKEN as a secret.
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"
      #   env:
      #     NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          npx playwright install --with-deps

      - name: Start Firebase emulators
        run: |
          npx firebase emulators:start --project=${{ secrets.GCLOUD_PROJECT }} --only firestore,auth > firebase-emulator.log &

          echo "Waiting for emulators to start..."
          timeout 60s bash -c '
            while ! curl -s http://localhost:8080 > /dev/null; do
              echo "Waiting for Firestore emulator..."
              sleep 1
            done
            while ! curl -s http://localhost:9099 > /dev/null; do
              echo "Waiting for Auth emulator..."
              sleep 1
            done
          '
          echo "Emulators are up and running."

      - name: Run affected tests
        run: npx nx affected -t lint,test,e2e --parallel=3

      - name: Stop Firebase emulators
        if: always()
        run: |
          kill $(jobs -p) || true
